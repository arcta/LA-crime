#!/bin/bash

. ~/.local.cnf

START_YEAR=2005
CURRENT_YEAR=$(date +'%Y')
DIR=$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)
COLLECTION=$'crime'

########################################################################
###  Load archived files from http://shq.lasdnews.net/CrimeStats/CAASS/

if [ -d $DIR/archive ]; then
    echo "Local archive exists"
else
    mkdir $DIR/archive
fi

if ! [ -d $DIR/data ]; then
    mkdir $DIR/data
fi

let Y=$START_YEAR
while [[ $Y -lt $CURRENT_YEAR ]]; do
    if [ -f $DIR/archive/$Y-PART_I_AND_II_CRIMES.csv.gz ]; then
        echo "$Y using local archive..."
        gzip -d $DIR/archive/$Y-PART_I_AND_II_CRIMES.csv.gz
    else
        curl -o $DIR/archive/$Y-PART_I_AND_II_CRIMES.csv \
                http://shq.lasdnews.net/CrimeStats/CAASS/$Y-PART_I_AND_II_CRIMES.csv
    fi

    tr '[:upper:]' '[:lower:]' < $DIR/archive/$Y-PART_I_AND_II_CRIMES.csv > $DIR/data/$Y.csv
    perl -pi -e 's/[[:^ascii:]]//g' $DIR/data/$Y.csv
    sed -i '1!b;s/"//g' $DIR/data/$Y.csv
    gzip $DIR/archive/$Y-PART_I_AND_II_CRIMES.csv
    ((Y = Y + 1))
done

########################################################################
### free source for non-profit #########################################

if ! [ -f $DIR/archive/usps_zcta5.csv.gz ]; then
    curl -o $DIR/archive/usps_zcta5.csv \
            http://www.unitedstateszipcodes.org/zip_code_database.csv
    echo "
    /***********************************************************************
        free source for non-profit:
        http://www.unitedstateszipcodes.org/zip-code-database/
    ***********************************************************************/
    drop table if exists usps_zcta5;
    create table usps_zcta5(
        zip char(5) not null default '00000',
        type varchar(20),
        primary_city varchar(150),
        acceptable_cities text,
        unacceptable_cities text,
        state char(2),
        county varchar(150),
        timezone varchar(150),
        area_codes int,
        latitude float,
        longitude float,
        world_region varchar(10),
        country varchar(10),
        decommissioned bool,
        estimated_population int,
        notes varchar(255),
        primary key (zip)
    );

    load data local infile '${DIR}/archive/usps_zcta5.csv'
    into table usps_zcta5 fields terminated by ',' enclosed by '\"'
    ignore 1 lines;
    " > usps-zcta5-import.sql

    mysql --user=root --password=$MYSQL_ROOT_PASS $DATABASE \
            < usps-zcta5-import.sql
fi

########################################################################
### clean, validate, filter & transform data into format used by app ###

python $DIR/archive-audit.py
# convert to jsonArray: new-line-separated records
for file in `find data -name "F20*.json"`; do
    sed -i 's/},{/}\n{/g' $file
    sed -i 's/\[{/{/g' $file
    sed -i 's/}\]/}\n/g' $file
done

python $DIR/archive-import.py

########################################################################
### load to other databases ############################################

((LAST_YEAR = CURRENT_YEAR -1))
### drop collection if exists and load most recent year
mongoimport --username $DATAUSER --password $MONGO_PASS \
            --collection $COLLECTION --db $DATABASE --drop \
            --file $DIR/data/$LAST_YEAR.json --jsonArray --batchSize 1
echo "$LAST_YEAR imported"
### load other years
while [[ $LAST_YEAR -gt $START_YEAR ]]
do
    ((LAST_YEAR = LAST_YEAR - 1))
    mongoimport --username $DATAUSER --password $MONGO_PASS \
                --collection $COLLECTION --db $DATABASE \
                --file $DIR/data/$LAST_YEAR.json --jsonArray --batchSize 1
    echo "$LAST_YEAR imported"
done
